{"version":3,"file":"static/js/785.4a4f8ad1.chunk.js","mappings":"iPAMe,SAASA,IAAW,IAAD,EAChC,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,KAAKL,GACLM,OAAM,SAACC,GAAD,OAAWC,EAAAA,EAAAA,IAAM,qCACzB,CAACP,IACJ,IAAMQ,GAA8B,OAAZV,QAAY,IAAZA,GAAA,UAAAA,EAAcW,eAAd,eAAuBC,QAAS,EACxD,OACE,yBACGF,GACC,wBACGV,EAAaW,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACxB,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,SAOb,0BACE,0E,0MC3BVG,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAgB,mCAAtB,SAEeC,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCC,GAAhC,4FAAqCC,EAArC,+BAA6C,GAA7C,SACyBJ,IAAAA,IAAUG,GADnC,cACQE,EADR,yBAES,OAACA,QAAD,IAACA,GAAAA,EAAUC,KAEdD,EAASC,KADTC,QAAQC,OAAO,IAAIC,MAAJ,+BAAkCL,MAHvD,mEAOO,SAAeM,IAAtB,4CAAO,OAAP,oBAAO,uGAAoCC,EAApC,+BAAyC,EAAzC,SACQT,EAAiB,+BAAD,OACID,EADJ,iBAC0BU,EAD1B,yBADxB,2GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BR,GAA/B,0FAAsCO,EAAtC,+BAA2C,EAA3C,SACQT,EAAiB,uBAAD,OACJE,EADI,oBACaH,EADb,iBACmCU,EADnC,yBADxB,2GAME,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+B5B,GAA/B,iFACQiB,EAAiB,UAAD,OACjBjB,EADiB,oBACEgB,IAF1B,0GAMA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA+B7B,GAA/B,iFACQiB,EAAiB,UAAD,OACjBjB,EADiB,4BACUgB,IAFlC,0GAMA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,0FAAwC0B,EAAxC,+BAA6C,EAA7C,SACQT,EAAiB,UAAD,OACjBjB,EADiB,4BACUgB,EADV,iBACgCU,IAFxD","sources":["components/Reviews/Reviews.js","services/movie-api.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"services/movie-api\";\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(setMovieReviews)\n      .catch((error) => toast(\"No results, please try again\"));\n  }, [movieId]);\n  const hasMovieReviews = movieReviews?.results?.length > 0;\n  return (\n    <div>\n      {hasMovieReviews ? (\n        <ul>\n          {movieReviews.results.map(({ id, author, content }) => (\n            <li key={id}>\n              <b>Author: {author}</b>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>\n          <p>We don't have any reviews for this movie</p>\n        </div>\n      )}\n    </div>\n  );\n}\n","import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst MOVIE_API_KEY = \"a89b03c28f1cd3b25a7da78bf74e4fe0\";\n\nasync function getMoviesOrError(url, query = \"\") {\n  const response = await axios.get(url);\n  return !response?.data\n    ? Promise.reject(new Error(`No results for query ${query}`))\n    : response.data;\n}\n\nexport async function getTrendingDayMovies(page=1) {\n  return await getMoviesOrError(\n    `/trending/movie/day?api_key=${MOVIE_API_KEY}&page=${page}&include_adult=false`,\n  );\n}\n\nexport async function getSearchMovies(query, page=1) {\n  return await getMoviesOrError(\n    `/search/movie?query=${query}&api_key=${MOVIE_API_KEY}&page=${page}&include_adult=false`,\n  );\n}\n  \n  export async function getMovieDetails(movieId) {\n    return await getMoviesOrError(\n      `/movie/${movieId}?api_key=${MOVIE_API_KEY}`,\n    );\n  } \n\n  export async function getMovieCredits(movieId) {\n    return await getMoviesOrError(\n      `/movie/${movieId}/credits?api_key=${MOVIE_API_KEY}`,\n    );\n  } \n\n  export async function getMovieReviews(movieId, page=1) {\n    return await getMoviesOrError(\n      `/movie/${movieId}/reviews?api_key=${MOVIE_API_KEY}&page=${page}`,\n    );\n  } \n\n"],"names":["Reviews","useState","movieReviews","setMovieReviews","movieId","useParams","useEffect","getMovieReviews","then","catch","error","toast","hasMovieReviews","results","length","map","id","author","content","axios","MOVIE_API_KEY","getMoviesOrError","url","query","response","data","Promise","reject","Error","getTrendingDayMovies","page","getSearchMovies","getMovieDetails","getMovieCredits"],"sourceRoot":""}